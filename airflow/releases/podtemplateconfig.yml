apiVersion: v1
kind: ConfigMap
metadata:
  name: podtemplateconfig
  namespace: bi
data:
  pod_template_file.yml: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: podoverrider
      labels:
        tier: airflow
        component: worker
        release: airflow
    spec:
      initContainers:
        
        - name: git-sync-init
          image: registry.k8s.io/git-sync/git-sync:v3.6.9
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 65533
            runAsGroup: 65533
            fsGroup:65533
          env:
            - name: GIT_SYNC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "airflow-user-secrets"
                  key: GIT_SYNC_USERNAME
            - name: GIT_SYNC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "airflow-user-secrets"
                  key: GIT_SYNC_PASSWORD
            - name: GIT_SYNC_REV
              value: "HEAD"
            - name: GIT_SYNC_BRANCH
              value: "qa"
            - name: GIT_SYNC_REPO
              value: "https://github.com/one-acre-fund/batch-pipelines.git"
            - name: GIT_SYNC_DEPTH
              value: "1"
            - name: GIT_SYNC_ROOT
              value: "/git"
            - name: GIT_SYNC_DEST
              value: "repo"
            - name: GIT_SYNC_ADD_USER
              value: "true"
            - name: GIT_SYNC_WAIT
              value: "60"
            - name: GIT_SYNC_MAX_SYNC_FAILURES
              value: "0"
            - name: GIT_SYNC_ONE_TIME
              value: "true"
          resources: 
              {}
          volumeMounts:
          - name: dags
            mountPath: /git
      containers:
        - envFrom:      
            []
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor      
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: fernet-key
            # For Airflow <2.3, backward compatibility; moved to [database] in 2.3
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: connection
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: webserver-secret-key      
            # Dynamically created environment variables
            - name: AIRFLOW_VAR_BRANCH
              value: "qa"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW_VAR_BRANCH
              value: "qa"
            - name: AIRFLOW_VAR_DAGS_REPO
              value: "one-acre-fund/batch-pipelines"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW_VAR_DAGS_REPO
              value: "one-acre-fund/batch-pipelines"
            - name: AIRFLOW_VAR_AIRBYTE_CONN_ID
              value: "airbyte"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW_VAR_AIRBYTE_CONN_ID
              value: "airbyte"
            - name: AIRFLOW_VAR_SAVE_TO_FILE
              value: "FALSE"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW_VAR_SAVE_TO_FILE
              value: "FALSE"
            - name: DBT_ENV_SECRET_SNOWFLAKE_USER
              value: "airbyte"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__DBT_ENV_SECRET_SNOWFLAKE_USER
              value: "airbyte"
            - name: DBT_SNOWFLAKE_ACCOUNT
              value: "oaf-data"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__DBT_SNOWFLAKE_ACCOUNT
              value: "oaf-data"
            - name: DBT_SNOWFLAKE_ROLE
              value: "ETL_WH_ROLE"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__DBT_SNOWFLAKE_ROLE
              value: "ETL_WH_ROLE"
            - name: DBT_SNOWFLAKE_WAREHOUSE
              value: "ETL_WH"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__DBT_SNOWFLAKE_WAREHOUSE
              value: "ETL_WH"
            # Dynamically created secret envs
            - name: AIRFLOW_CONN_AIRBYTE
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: AIRFLOW_CONN_AIRBYTE
            - name: AIRFLOW_CONN_AIRBYTE_API
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: AIRFLOW_CONN_AIRBYTE_API
            - name: AIRFLOW_CONN_AIRBYTE_HTTP_API
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: AIRFLOW_CONN_AIRBYTE_HTTP_API
            - name: AIRFLOW_VAR_GITHUB_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: AIRFLOW_VAR_GITHUB_ACCESS_TOKEN
            - name: SODA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: SODA_API_KEY
            - name: SODA_API_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: SODA_API_KEY_SECRET
            - name: DBT_ENV_SECRET_SNOWFLAKE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-user-secrets
                  key: DBT_ENV_SECRET_SNOWFLAKE_PASSWORD
            - name: AIRFLOW__KUBERNETES_SECRETS__AIRFLOW_CONN_AIRBYTE
              value: airflow-user-secrets=AIRFLOW_CONN_AIRBYTE
            - name: AIRFLOW__KUBERNETES_SECRETS__AIRFLOW_CONN_AIRBYTE_API
              value: airflow-user-secrets=AIRFLOW_CONN_AIRBYTE_API
            - name: AIRFLOW__KUBERNETES_SECRETS__AIRFLOW_CONN_AIRBYTE_HTTP_API
              value: airflow-user-secrets=AIRFLOW_CONN_AIRBYTE_HTTP_API
            - name: AIRFLOW__KUBERNETES_SECRETS__AIRFLOW_VAR_GITHUB_ACCESS_TOKEN
              value: airflow-user-secrets=AIRFLOW_VAR_GITHUB_ACCESS_TOKEN
            - name: AIRFLOW__KUBERNETES_SECRETS__SODA_API_KEY
              value: airflow-user-secrets=SODA_API_KEY
            - name: AIRFLOW__KUBERNETES_SECRETS__SODA_API_KEY_SECRET
              value: airflow-user-secrets=SODA_API_KEY_SECRET
            - name: AIRFLOW__KUBERNETES_SECRETS__DBT_ENV_SECRET_SNOWFLAKE_PASSWORD
              value: airflow-user-secrets=DBT_ENV_SECRET_SNOWFLAKE_PASSWORD
            
            # Extra env      
          image: apache/airflow:2.7.1
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          name: base
          resources:
            {}
          volumeMounts:
            - mountPath: "/opt/airflow/logs"
              name: logs
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
            - name: dags
              mountPath: /opt/airflow/dags
              readOnly: false

      restartPolicy: Never
      securityContext: 
        runAsUser: 50000
        fsGroup: 0
      nodeSelector:
        {}
      affinity:
        {}
      terminationGracePeriodSeconds: 600
      tolerations:
        []
      topologySpreadConstraints:
        []
      serviceAccountName: airflow-worker
      volumes:
      - name: dags
        emptyDir: {}
      - name: logs
        persistentVolumeClaim:
          claimName: airflow-logs
      - configMap:
          name: airflow-config
        name: config