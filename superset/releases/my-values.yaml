extraSecretEnv:
  MAPBOX_API_KEY: "$(MAPBOX_API_KEY)"
  GOOGLE_KEY: "$(OAUTH_CLIENT_ID)"
  GOOGLE_SECRET: "$(OAUTH_CLIENT_SECRET)"
  SLACK_API_TOKEN: "$(SLACK_API_TOKEN)"
  SMTP_PASSWORD: "$(EMAIL_HOST_PASSWORD)"
  KEYCLOAK_CLIENT_SECRET: "$(KEYCLOAK_CLIENT_SECRET)"
  SECRET_KEY: "$(SECRET_KEY)"
  JWT_SECRET: "$(JWT_SECRET)"

extraEnv:
  SMTP_USER: "$(EMAIL_HOST_USER)"
  DEFAULT_ROLE: "$(DEFAULT_ROLE)"
  KEYCLOAK_CLIENT_ID: "$(KEYCLOAK_CLIENT_ID)"
  BASE_URL: "$(BASE_URL)"
  GLOBAL_ASYNC_QUERIES_TRANSPORT: "ws"
  FEATURE_FLAGS: "$(FEATURE_FLAGS)"
  FLOWER_UNAUTHENTICATED_API: "true"
  MAX_QUERY_EXECUTION_TIME: $(MAX_QUERY_EXECUTION_TIME)
  MAX_QUEUED_QUERIES_PER_THREAD: $(MAX_QUEUED_QUERIES_PER_THREAD) 
  MAX_QUERIES_PER_WORKER: $(MAX_QUERIES_PER_WORKER)
  SERVER_WORKER_AMOUNT: $(SERVER_WORKER_AMOUNT)
  SERVER_THREADS_AMOUNT: $(SERVER_THREAD_AMOUNT)
  SQLALCHEMY_POOL_SIZE: $(SQLALCHEMY_POOL_SIZE)
  SQLALCHEMY_MAX_OVERFLOW: $(SQLALCHEMY_MAX_OVERFLOW)

supersetNode:
  replicaCount: $(REPLICAS)
  connections:
    #   redis_host: "superset-redis-master"
    db_host: $(POSTGRES_HOST)
    db_port: $(POSTGRES_PORT)
    db_user: $(POSTGRES_USER)
    db_pass: $(POSTGRES_PASSWORD)
    db_name: $(POSTGRES_DBNAME)
  resources:
    limits:
      # Warning, CPU consumption is pretty intensive at startup time, we need to keep a high value, otherwise startup can hang...
      cpu: 1
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 2Gi  
  podAnnotations:
    co.elastic.logs/enabled: "true"
    co.elastic.logs/processors.1.add_tags.tags: "superset-server"
    co.elastic.logs/processors.2.add_tags.tags: "superset"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: '^((\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d+:)|(\d{1,3}(\.\d{1,3}){3} - - \[)|(\[\d{4}-\d{2}-\d{2}))'
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"

supersetWorker:
  replicaCount: $(WORKER_REPLICAS)
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
       cpu: 1
       memory: 4Gi
  podAnnotations:
    co.elastic.logs/enabled: "true"
    co.elastic.logs/processors.1.add_tags.tags: "superset-worker"
    co.elastic.logs/processors.2.add_tags.tags: "superset"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: '^((\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d+:)|(\[\d{4}-\d{2}-\d{2}))'
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"

postgresql:
  enabled: $(ENABLE_INTERNAL_POSTGRES)
  image:
    tag: 11.10.0-debian-10-r24
  auth:
    postgresPassword: superset
    password: superset
  # primary:
  #   extraVolumes:
  #     - name: config
  #       configMap:
  #         name: config
  #   extraVolumeMounts:
  #     - name: config
  #       mountPath: /opt/bitnami/postgresql/conf/

  persistence:
    storageClass: "$(STORAGE_CLASS)"

  resources:
    limits:
      cpu: 200m
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 1Gi

redis:
  master:
    resources:
      limits:
        cpu: 200m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 128Mi

replicaCount: $(REPLICAS)

supersetCeleryFlower:
  enabled: true
  extraEnv:
    FLOWER_PURGE_OFFLINE_WORKERS: 600

supersetWebsockets:
  enabled: true
  image:
    tag: slim
