# Values to start up datahub after starting up the datahub-prerequisites
# chart with "prerequisites" release name
#
# Sourced from https://github.com/acryldata/datahub-helm/blob/master/charts/datahub/values.yaml
datahub-gms:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
    pullPolicy: "IfNotPresent"
  extraEnvs:
    - name: JAVA_OPTS
      value: "-Xms1280m -Xmx1280m"
    - name: REACT_APP_LOGO_URL
      value: "$(LOGO_URL)"
    - name: METADATA_SERVICE_AUTH_ENABLED
      value: "$(ENABLE_PERSONAL_ACCESS_TOKENS)"
    - name: SPRING_KAFKA_PRODUCER_PROPERTIES_MAX_REQUEST_SIZE
      value: "$(KAFKA_MAX_MESSAGE_BYTES)"
    - name: SHOW_ACCESS_MANAGEMENT
      value: "true"
  resources:
    requests:
      cpu: 1
      memory: "1300Mi"
    limits:
      cpu: 2
      memory: "2Gi"
  service:
    type: "ClusterIP"
  podAnnotations:
    co.elastic.logs/enabled: "true"
    co.elastic.logs/processors.1.add_tags.tags: "datahub-gms"
    co.elastic.logs/processors.2.add_tags.tags: "datahub"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d+'
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"

datahub-frontend:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
    pullPolicy: "IfNotPresent"
  # Set up ingress to expose react front-end
  ingress:
    enabled: false
  resources:
    requests:
      cpu: "300m"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "1Gi"
  service:
    type: "NodePort"
  extraEnvs:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx968m"
    - name: AUTH_OIDC_ENABLED
      value: $(AUTH_OIDC_ENABLED)
    - name: AUTH_OIDC_CLIENT_ID
      value: $(AUTH_OIDC_CLIENT_ID)
    - name: AUTH_OIDC_CLIENT_SECRET
      value: $(AUTH_OIDC_CLIENT_SECRET)
    - name: AUTH_OIDC_DISCOVERY_URI
      value: $(AUTH_OIDC_DISCOVERY_URI)
    - name: AUTH_OIDC_BASE_URL
      value: $(AUTH_OIDC_BASE_URL)
    - name: METADATA_SERVICE_AUTH_ENABLED
      value: "$(ENABLE_PERSONAL_ACCESS_TOKENS)"
    - name: SHOW_ACCESS_MANAGEMENT
      value: "true"
  extraVolumes:
    - name: user-props-volume
      configMap:
        name: datahub-frontend-volumes
  extraVolumeMounts:
    - name: user-props-volume
      mountPath: /datahub-frontend/conf/user.props
      subPath: user.props
  podAnnotations:
    co.elastic.logs/enabled: "true"
    co.elastic.logs/processors.1.add_tags.tags: "datahub"
    co.elastic.logs/processors.2.add_tags.tags: "datahub-frontend"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d+'
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"
      
acryl-datahub-actions:
  enabled: true
  image:
    pullPolicy: "IfNotPresent"
  resources:
    limits:
      cpu: "500m"
      memory: "2Gi"
    requests:
      cpu: "100m"
      memory: "1Gi"
  podAnnotations:
    co.elastic.logs/enabled: "false"
    co.elastic.logs/processors.1.add_tags.tags: "datahub-actions"
    co.elastic.logs/processors.2.add_tags.tags: "datahub"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: "^\\["
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"

datahub-mae-consumer:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
    pullPolicy: "IfNotPresent"
  resources:
    limits:
      cpu: "100m"
      memory: "512mi"
    requests:
      cpu: "50m"
      memory: "128Mi"
  podAnnotations:
    co.elastic.logs/enabled: "false"
    co.elastic.logs/processors.1.add_tags.tags: "datahub"
    co.elastic.logs/processors.2.add_tags.tags: "datahub-mae"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: "^\\["
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"

datahub-mce-consumer:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
    pullPolicy: "IfNotPresent"
  resources:
    limits:
      cpu: "100m"
      memory: "512Mi"
    requests:
      cpu: "50m"
      memory: "128Mi"
  podAnnotations:
    co.elastic.logs/enabled: "false"
    co.elastic.logs/processors.1.add_tags.tags: "datahub"
    co.elastic.logs/processors.2.add_tags.tags: "datahub-mce"
    co.elastic.logs/multiline.type: "pattern"
    co.elastic.logs/multiline.pattern: "^\\["
    co.elastic.logs/multiline.negate: "true"
    co.elastic.logs/multiline.match: "after"

datahub-ingestion-cron:
  enabled: false
  image:
    repository: acryldata/datahub-ingestion
    tag: "v$(DATAHUB_VERSION)"

elasticsearchSetupJob:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
  imagePullPolicy: "IfNotPresent"
  resources:
    requests:
      cpu: "500m"
    limits:
      cpu: "1"

kafkaSetupJob:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
  imagePullPolicy: "IfNotPresent"
  resources:
    requests:
      cpu: "500m"
    limits:
      cpu: "1"

mysqlSetupJob:
  enabled: false
  image:
    tag: "v$(DATAHUB_VERSION)"

postgresqlSetupJob:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
  imagePullPolicy: "IfNotPresent"

datahubUpgrade:
  enabled: true
  image:
    tag: "v$(DATAHUB_VERSION)"
  imagePullPolicy: "IfNotPresent"
  noCodeDataMigration:
    sqlDbType: "POSTGRES"
  restoreIndices:
    resources:
      requests:
        cpu: "500m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "1Gi"
    extraEnvs:
      - name: JAVA_OPTS
        value: "-Xms512m -Xmx968m"

datahubSystemUpdate:
  resources:
    requests:
      cpu: "500m"
    limits:
      cpu: "1"

global:
  graph_service_impl: elasticsearch

  elasticsearch:
    host: "elasticsearch-master"
    port: "9200"

  kafka:
    bootstrap:
      server: "datahub-prerequisites-kafka:9092"
    zookeeper:
      server: "datahub-prerequisites-zookeeper:2181"
    maxMessageBytes: $(KAFKA_MAX_MESSAGE_BYTES)
    producer:
      maxRequestSize: $(KAFKA_MAX_MESSAGE_BYTES)
    consumer:
      maxPartitionFetchBytes: $(KAFKA_MAX_MESSAGE_BYTES)
    # schemaregistry:
      # TODO: Switch type to INTERNAL and uninstall cp-schema-registry when
      # a fix for https://github.com/acryldata/datahub-helm/issues/347 is available
      # type: "KAFKA"
      # url: "http://datahub-prerequisites-cp-schema-registry:8081"

  sql:
    datasource:
      host: "$(POSTGRES_HOST):$(POSTGRES_PORT)"
      hostForpostgresqlClient: "$(POSTGRES_HOST)"
      port: "5432"
      url: "jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_APP_DATABASE)"
      driver: "org.postgresql.Driver"
      username: "$(POSTGRES_APP_USER)"
      password:
        secretRef: "datahub-secrets"
        secretKey: "postgres-app-password"