{
  "FolderID": "",
  "FolderName": "",
  "OwnerUserID": "197064206853",
  "OwnerUserName": "BASILOGBONNA",
  "Version": 89,
  "URL": "/west-europe.azure/oaf/w2O7ZZjZ5UAT#query",
  "WorksheetID": "2O7ZZjZ5UAT",
  "WorksheetName": "CREATE PROCEDURES(STAGING)",
  "LocalPath": "/Users/mrcea/Desktop/oaf/data-tools/snowflake/worksheets/Worksheet.oaf.CREATE PROCEDURES(STAGING).2O7ZZjZ5UAT.json",
  "StartedUtc": "2023-03-09T10:21:53.3397286Z",
  "EndedUtc": "2023-03-09T10:21:53.6810158Z",
  "ModifiedUtc": "2023-03-13T14:34:47.983433Z",
  "Role": "DATAENGINEER",
  "Warehouse": "COMPUTE_WH",
  "Database": "STAGING",
  "Schema": "",
  "Query": "CREATE OR REPLACE PROCEDURE STAGING.KOBO.SP_INCREMENTLOAD_FARMERS_ENROLLMENT_KENLR23()\nRETURNS VARCHAR\nLANGUAGE SQL\nEXECUTE AS CALLER\nAS \nDECLARE UPDATE_COUNT INTEGER; INSERT_COUNT INTEGER; HAS_STREAM BOOLEAN; DELETE_COUNT INTEGER;\nBEGIN\n    DELETE FROM landing.kobo.kenya_farmers_enrollment_lr23\n    where FARMER_ID is null AND id in (select id from landing.kobo.kenya_farmers_enrollment_lr23 group by id having count(id) > 1) ;\n    DELETE FROM staging.kobo.kenya_farmers_enrollment_lr23\n    where FARMER_ID is null AND id in (select id from staging.kobo.kenya_farmers_enrollment_lr23 group by id having count(id) > 1) ;\n    UPDATE STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 T \n    SET \n        T.SUBMISSION_ID = S.SUBMISSION_ID,\n        T.REGION = S.REGION,\n        T.NURSERY = S.NURSERY,\n        T.DUKA = S.DUKA,\n        T.USERNAME = S.USERNAME,\n        T.SITE = S.SITE,\n        T.OTHER_SITE = S.OTHER_SITE,\n        T.FARMER_NAME = S.FARMER_NAME,\n        T.FARMER_ID = CASE WHEN S.FARMER_ID = NULL THEN S.FARMER_NATIONAL_ID END,\n        T.FARMER_PHONE_NUMBER = S.FARMER_PHONE_NUMBER,\n        T.TUPANDE_FARMER = S.TUPANDE_FARMER,\n        T.START_TIME= S.START_TIME,\n        T.END_TIME = S.END_TIME,\n        T.SUBMISSION_TIME = S.SUBMISSION_TIME,\n        T.SUBMITTED_BY = S.SUBMITTED_BY,\n        T.YEAR = S.YEAR,\n        T.SEASON = S.SEASON,\n        T.COUNTRY = S.COUNTRY\n    FROM(\n      SELECT DISTINCT * FROM LANDING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 \n    )S\n    WHERE T.ID = S.ID\n    AND (\n    IFNULL(T.SUBMISSION_ID,'') != IFNULL(S.SUBMISSION_ID,'')\n    OR IFNULL(T.REGION,'') != IFNULL(S.REGION,'')\n    OR IFNULL(T.NURSERY,'') != IFNULL(S.NURSERY,'')\n    OR IFNULL(T.DUKA,'') != IFNULL(S.DUKA,'')\n    OR IFNULL(T.USERNAME,'') != IFNULL(S.USERNAME,'')\n    OR IFNULL(T.SITE,'') != IFNULL(S.SITE,'')\n    OR IFNULL(T.OTHER_SITE,'') != IFNULL(S.OTHER_SITE,'')\n    OR IFNULL(T.FARMER_NAME,'') != IFNULL(S.FARMER_NAME,'')\n    OR IFNULL(T.FARMER_ID,'') != IFNULL(S.FARMER_ID,'')\n    OR IFNULL(T.FARMER_PHONE_NUMBER,'') != IFNULL(S.FARMER_PHONE_NUMBER,'')\n    OR IFNULL(T.TUPANDE_FARMER,'') != IFNULL(S.TUPANDE_FARMER,'')\n    OR IFNULL(T.START_TIME,NULL) != IFNULL(S.START_TIME,NULL)\n    OR IFNULL(T.END_TIME,NULL) != IFNULL(S.END_TIME,NULL)\n    OR IFNULL(T.SUBMISSION_TIME,NULL) != IFNULL(S.SUBMISSION_TIME,NULL)\n    OR IFNULL(T.SUBMITTED_BY,'') != IFNULL(S.SUBMITTED_BY,'')\n    OR IFNULL(T.YEAR,'') != IFNULL(S.YEAR,'')\n    OR IFNULL(T.SEASON,'') != IFNULL(S.SEASON,'')\n    OR IFNULL(T.COUNTRY,'') != IFNULL(S.COUNTRY,'')\n    );\n    UPDATE_COUNT := :SQLROWCOUNT;\n    \n    INSERT INTO STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 (\n        ID, SUBMISSION_ID, REGION, NURSERY, DUKA, USERNAME, SITE, OTHER_SITE, FARMER_NAME, \n        FARMER_ID, FARMER_PHONE_NUMBER, TUPANDE_FARMER,YEAR, SEASON, COUNTRY, START_TIME,END_TIME, \n        SUBMISSION_TIME, SUBMITTED_BY\n    )\n    SELECT DISTINCT ID, SUBMISSION_ID, REGION, NURSERY, DUKA, USERNAME, SITE, OTHER_SITE, FARMER_NAME, \n        CASE WHEN FARMER_ID = NULL THEN FARMER_NATIONAL_ID ELSE FARMER_ID END,FARMER_PHONE_NUMBER,\n        TUPANDE_FARMER,YEAR, SEASON, COUNTRY, START_TIME,END_TIME, SUBMISSION_TIME, SUBMITTED_BY\n    FROM LANDING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 S\n    WHERE S.ID NOT IN (SELECT ID FROM STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23);\n    INSERT_COUNT := :SQLROWCOUNT;\n\n  UPDATE  STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23  AS TRG\n    SET IS_DELETED = true\n    FROM(\n     SELECT T.ID FROM LANDING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 AS S\n     RIGHT JOIN  STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 AS T \n     ON S.ID = T.ID\n     WHERE S.ID IS NULL\n    ) AS SRC\n    WHERE TRG.ID = SRC.ID;\n    DELETE_COUNT := :SQLROWCOUNT;\n\nSELECT SYSTEM$STREAM_HAS_DATA('STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23_STREAM') INTO :HAS_STREAM;\n    IF(:INSERT_COUNT = 0 AND :UPDATE_COUNT = 0 AND :DELETE_COUNT = 0 AND HAS_STREAM = TRUE) \n    THEN\n        CREATE TEMPORARY TABLE TEMP_KLR23_STREAM AS (SELECT * FROM STAGING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23_STREAM);\n    END IF;\nEND;\n\n\nCREATE OR REPLACE PROCEDURE LANDING.KOBO.CLEANUP_LANDING()\nRETURNS VARCHAR\nLANGUAGE SQL\nEXECUTE AS CALLER\nAS \nBEGIN\nCREATE OR REPLACE TEMPORARY TABLE CLEANUP AS (SELECT DISTINCT * FROM LANDING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23);\nTRUNCATE TABLE LANDING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23;\nINSERT INTO LANDING.KOBO.KENYA_FARMERS_ENROLLMENT_LR23 SELECT DISTINCT * FROM CLEANUP;\nDELETE FROM landing.kobo.kenya_farmers_enrollment_lr23\nwhere FARMER_ID is null AND id in (select id from landing.kobo.kenya_farmers_enrollment_lr23 group by id having count(id) > 1) ;\nEND;\n\n\n\nCREATE OR REPLACE PROCEDURE STAGING.KOBO.STANDARD_GEO_POINT(STRING_VAL VARCHAR)\nRETURNS VARCHAR\nLANGUAGE SQL\nEXECUTE AS CALLER\nAS \nDECLARE RETURNED FLOAT;\nBEGIN\n  WITH CTE(value) as (\n   SELECT SPLIT_PART(:STRING_VAL,';',0) as value\n  )\n  select COALESCE(:RETURNED+' ', '') + SUBSTRING(trim(value), CHARINDEX(' ', trim(value)), CHARINDEX(' ', trim(value), CHARINDEX(' ', trim(value))+1)- CHARINDEX(' ', trim(value))) + ' ' + left(trim(value),charindex(' ', trim(value)))+',' INTO :RETURNED from cte;\n  return RETURNED::VARCHAR;\nEND;\n",
  "Parameters": [],
  "Charts": [],
  "FileSystemSafeName": "Worksheet.oaf.CREATE PROCEDURES(STAGING).2O7ZZjZ5UAT.json",
  "_CreatedWith": "Snowflake Snowsight Extensions",
  "_CreatedVersion": "2023.2.8.0",
  "AccountName": "oaf",
  "AccountFullName": "oaf.west-europe.azure",
  "AccountUrl": "https://oaf.west-europe.azure.snowflakecomputing.com",
  "OrganizationID": "320344210810",
  "Region": "west-europe.azure"
}