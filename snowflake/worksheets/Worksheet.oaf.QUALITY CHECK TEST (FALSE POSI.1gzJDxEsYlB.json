{
  "FolderID": "",
  "FolderName": "",
  "OwnerUserID": "197064206853",
  "OwnerUserName": "BASILOGBONNA",
  "Version": 334,
  "URL": "/west-europe.azure/oaf/w1gzJDxEsYlB#query",
  "WorksheetID": "1gzJDxEsYlB",
  "WorksheetName": "QUALITY CHECK TEST (FALSE POSITIVES)",
  "LocalPath": "/Users/mrcea/Desktop/oaf/data-tools/snowflake/worksheets/Worksheet.oaf.QUALITY CHECK TEST (FALSE POSI.1gzJDxEsYlB.json",
  "StartedUtc": "2023-02-15T14:05:27.7248615Z",
  "EndedUtc": "2023-02-15T14:05:27.972199Z",
  "ModifiedUtc": "2023-03-13T15:34:12.109932Z",
  "Role": "DATAENGINEER",
  "Warehouse": "ETL_WH",
  "Database": "DEVELOPMENT",
  "Schema": "PUBLIC",
  "Query": "CREATE OR REPLACE PROCEDURE PRODUCTION.PUBLIC.SP_CHECK_TEST_INCREMENTLOAD(\"DEV_TABLE\" VARCHAR(16777216), \"PROD_TABLE\" VARCHAR(16777216), \"PRIMARY_IDENTIFIER\" VARCHAR(16777216), \"UNIQUE_IDENTIFIER\" VARCHAR(16777216), \"PRODUCTION_STORED_PROCEDURE\" VARCHAR(16777216),\n\"TASK_NAME\" VARCHAR(16777216)\n)\nRETURNS VARCHAR(16777216)\nLANGUAGE SQL\nEXECUTE AS CALLER\nAS \nDECLARE\nRETURN_VAL OBJECT;\nDATE_OF_LAST_FALSE_POSITIVE_CHECK datetime;\nDATE_OF_LAST_ALTERATION_OF_QUALITY_CHECK datetime;\nQUALITY_CHECK_TEST_EXCEPTION EXCEPTION (-20020, ''); \nMESSAGE varchar;\nBEGIN\n\nSELECT TOP 1 COMPLETED_TIME INTO :DATE_OF_LAST_FALSE_POSITIVE_CHECK  FROM table(development.information_schema.task_history()) WHERE NAME = :TASK_NAME AND STATE = 'SUCCEEDED';\n\nSELECT TOP 1 LAST_ALTERED INTO :DATE_OF_LAST_ALTERATION_OF_QUALITY_CHECK FROM PRODUCTION.INFORMATION_SCHEMA.procedures WHERE PROCEDURE_NAME = 'SP_CHECK_INCREMENTLOAD';\n\nIF(:DATE_OF_LAST_FALSE_POSITIVE_CHECK > :DATE_OF_LAST_ALTERATION_OF_QUALITY_CHECK )\nTHEN \n    LET VAL VARCHAR := 'FALSE POSITIVE TEST SKIPPED: NO CHANGES MADE TO SP_CHECK_INCREMENTLOAD';\n    CALL SYSTEM$SET_RETURN_VALUE(:VAL);\n    RETURN :VAL;\nEND IF;\n\nCREATE TEMPORARY TABLE TEMP_DEV LIKE IDENTIFIER(:DEV_TABLE);\nCREATE TEMPORARY TABLE TEMP_PROD LIKE IDENTIFIER(:PROD_TABLE);\nINSERT INTO TEMP_DEV SELECT TOP 1 * FROM IDENTIFIER(:DEV_TABLE);\nALTER TABLE TEMP_DEV ALTER COLUMN ID DROP NOT NULL; \nUPDATE TEMP_DEV SET ID = NULL;\n\nCALL PRODUCTION.PUBLIC.SP_CHECK_INCREMENTLOAD(\n    'TEMP_DEV', 'TEMP_PROD',\n    :PRIMARY_IDENTIFIER, \n    :UNIQUE_IDENTIFIER,\n    :PRODUCTION_STORED_PROCEDURE,\n     TRUE\n) INTO :RETURN_VAL;\nIF((TYPEOF(:RETURN_VAL)!= 'OBJECT') OR( GET(:RETURN_VAL, 'SQLERRM') != 'NULL ' || :PRIMARY_IDENTIFIER || ' EXISTS IN TEMP_DEV'  ))\nTHEN \n    RAISE QUALITY_CHECK_TEST_EXCEPTION;\nEND IF;\n\nTRUNCATE TABLE TEMP_DEV;\n\nALTER TABLE TEMP_DEV ALTER COLUMN ID SET NOT NULL; \nINSERT INTO TEMP_DEV SELECT TOP 5 * FROM IDENTIFIER(:DEV_TABLE);\nINSERT INTO TEMP_PROD SELECT * FROM TEMP_DEV;\nDELETE FROM TEMP_PROD WHERE identifier(:PRIMARY_IDENTIFIER) = 3;\n\nCALL PRODUCTION.PUBLIC.SP_CHECK_INCREMENTLOAD(\n    'TEMP_DEV', 'TEMP_PROD',\n    :PRIMARY_IDENTIFIER, \n    :UNIQUE_IDENTIFIER,\n    :PRODUCTION_STORED_PROCEDURE,\n    TRUE\n) INTO :RETURN_VAL;\nIF((TYPEOF(:RETURN_VAL)!= 'OBJECT') OR( GET(:RETURN_VAL, 'SQLERRM') != 'DATA MANUALLY DELETED FROM TEMP_PROD'))\nTHEN \n    RAISE QUALITY_CHECK_TEST_EXCEPTION;\nEND IF;\n\nTRUNCATE TABLE TEMP_DEV;\nTRUNCATE TABLE TEMP_PROD;\nALTER TABLE TEMP_DEV DROP COLUMN ID;\n\nCREATE TEMPORARY TABLE TEMP_STAGE AS( SELECT TOP 1 * FROM IDENTIFIER(:DEV_TABLE));\nALTER TABLE TEMP_STAGE DROP COLUMN ID ;\nALTER TABLE TEMP_DEV ADD ID INT IDENTITY(1,1);\nINSERT INTO TEMP_DEV SELECT *, 1 FROM TEMP_STAGE;\nINSERT INTO TEMP_DEV SELECT *, 2 FROM TEMP_STAGE;\nINSERT INTO TEMP_DEV SELECT *, 3 FROM TEMP_STAGE;\nUPDATE TEMP_DEV SET IS_DELETED = TRUE WHERE ID = 1;\nALTER TABLE TEMP_PROD DROP COLUMN ID;\nALTER TABLE TEMP_PROD ADD ID INT IDENTITY(1,1);\nINSERT INTO TEMP_PROD SELECT *  FROM TEMP_DEV;\n\nCALL PRODUCTION.PUBLIC.SP_CHECK_INCREMENTLOAD(\n    'TEMP_DEV', 'TEMP_PROD',\n    :PRIMARY_IDENTIFIER, \n    :UNIQUE_IDENTIFIER,\n    :PRODUCTION_STORED_PROCEDURE,\n    TRUE\n) INTO :RETURN_VAL;\n\nif((TYPEOF(:RETURN_VAL)!='OBJECT') OR( GET(:RETURN_VAL, 'SQLERRM') != 'DATA IN TEMP_PROD NOT UNIQUE'))\nTHEN\n    RAISE QUALITY_CHECK_TEST_EXCEPTION;\nEND IF;\n\nCALL SYSTEM$SET_RETURN_VALUE('FALSE POSITIVE TEST PASSED');\n\nEXCEPTION \n    WHEN  QUALITY_CHECK_TEST_EXCEPTION THEN\n    MESSAGE := 'FALSE POSITIVE TEST FAILED : '|| GET(:RETURN_VAL, 'SQLERRM');\n    CALL SYSTEM$SET_RETURN_VALUE(:MESSAGE);\n    RAISE;   \nEND;\n\n",
  "Parameters": [],
  "Charts": [],
  "FileSystemSafeName": "Worksheet.oaf.QUALITY CHECK TEST (FALSE POSI.1gzJDxEsYlB.json",
  "_CreatedWith": "Snowflake Snowsight Extensions",
  "_CreatedVersion": "2023.2.8.0",
  "AccountName": "oaf",
  "AccountFullName": "oaf.west-europe.azure",
  "AccountUrl": "https://oaf.west-europe.azure.snowflakecomputing.com",
  "OrganizationID": "320344210810",
  "Region": "west-europe.azure"
}