yamlApplicationConfig:
  kafka:
    clusters:
      - name: local
        bootstrapServers: my-cluster-a-kafka-bootstrap:9096
        properties:
          sasl.mechanism: SCRAM-SHA-512
          security.protocol: SASL_SSL
          sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="my-scram-user" password="${SCRAM_PASSWORD}";
          # ssl.endpoint.identification.algorithm: ""
          ssl.truststore.location: /opt/sslstore/clustertruststore.jks
          ssl.truststore.password: ${CLUSTERTRUSTSTORE_PASSWORD}

          # sasl.oauthbearer.token.endpoint.url: http://keycloak/realms/kafka-authz/protocol/openid-connect/token

        schemaRegistry: http://confluent-schema-registry:8081
        schemaRegistrySSL:
          keystoreLocation: /opt/store/keystore.jks
          keystorePassword: ${KEYSTORE_PASSWORD}
        truststoreLocation: /opt/store/truststore.jks
        truststorePassword: ${TRUSTSTORE_PASSWORD}

        kafkaConnect:
          - name: my-connect-cluster-pool-a
            address: http://my-connect-cluster-pool-a-connect:8083
            keystoreLocation: /opt/sslstore/clusterstore.jks
            keystorePassword: ${CLUSTERTRUSTSTORE_PASSWORD}
          - name: my-connect-cluster-pool-b
            address: http://my-connect-cluster-pool-b-connect:8083
            keystoreLocation: /opt/sslstore/clusterstore.jks
            keystorePassword: ${CLUSTERTRUSTSTORE_PASSWORD}
      
        # metrics:
        #   type: PROMETHEUS
        #   port: 9404
        #   keystoreLocation:
        #   keystorePassword:

  auth:
    type: LOGIN_FORM
  spring:
    security:
      user:
        name: my-scram-user
        password: ${SCRAM_PASSWORD}
  # auth:
  #   type: OAUTH
  #   oauth2:
  #     client:
  #       keycloak:
  #         clientId: kafka-ui
  #         clientSecret: ${KAFKA_UI_CLIENT_SECRET}
  #         scope: openid profile
  #         issuer-uri: http://keycloak/realms/kafka-authz
  #         token-uri: http://keycloak/realms/kafka-authz/protocol/openid-connect/token
  #         jwks-uri: http://keycloak/realms/kafka-authz/protocol/openid-connect/certs
  #         user-name-attribute: preferred_username
  #         client-name: keycloak
  #         provider: keycloak
  #         custom-params:
  #           type: keycloak
  #           roles-field: client-roles
  #           groups-field: groups
  #           ssl.truststore.location: /opt/sslstore/keycloaktruststore.jks
  #           ssl.truststore.password: ${KEYCLOAKTRUSTSTORE_PASSWORD}
  #           ssl.keystore.password: ${KEYCLOAKSTORE_PASSWORD}
  #           ssl.keystore.location: /opt/sslstore/keycloakstore.jks
  #           logout-uri: http://keycloak/realms/kafka-authz/protocol/openid-connect/logout

  # rbac:
  #   roles:
  #     - name: "admin"
  #       clusters:
  #         - local
  #       subjects:
  #         - provider: oauth
  #           type: role
  #           value: client-roles
  #       permissions:
  #         - resource: applicationconfig
  #           # value not applicable for applicationconfig
  #           actions: ["view", "edit"] # can be with or without quotes
  #         - resource: clusterconfig
  #           # value not applicable for clusterconfig
  #           actions: ["view", "edit"]
  #         - resource: topic
  #           value: ".*"
  #           actions:
  #             - view
  #             - create
  #             - edit
  #             - delete
  #             - messages_read
  #             - messages_produce
  #             - messages_delete
  #         - resource: schema
  #           value: ".*"
  #           actions:
  #             - view
  #             - create
  #             - delete
  #             - edit
  #             - modify_global_compatibility
  #         - resource: consumer
  #           value: ".*"
  #           actions:
  #             - view
  #             - delete
  #             - reset_offsets
  #         - resource: connect
  #           value: ".*"
  #           actions:
  #             - view
  #             - edit
  #             - create
  #             - restart
  #         - resource: acl
  #           # value not applicable for acl
  #           actions:
  #             - view
  #             - edit

  management:
    health:
      ldap:
        enabled: false
volumeMounts:
  - name: registry-store
    mountPath: /opt/store
  - name: kafka-store
    mountPath: /opt/sslstore

volumes:
  - name: registry-store
    secret:
      secretName: confluent-schema-registry-jks
  - name: kafka-store
    secret:
      secretName: store
