trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - 'dbt/custom_image/*'
   

pool:
  vmImage: "ubuntu-latest"

name: DBT_$(Date:yyyyMMdd)$(Rev:.r)

variables:
  DBT_VERSION: "1"
  BRANCH_NAME: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]

steps:
  - script: |
      VERSION_TAG=`git describe --abbrev=0 --tags`
      echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"

      IMAGE_TAGS='$(BRANCH_NAME)'
      echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$(DBT_VERSION)-$IMAGE_TAGS"
      if [[ "$(Build.SourceBranch)" == "refs/heads/main" ]]; then IMAGE_TAGS="$IMAGE_TAGS,latest"; fi;
      echo Tags: $IMAGE_TAGS
      echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
    displayName: Get git tag

  - task: Docker@2
    displayName: Login to Azure registry
    inputs:
      containerRegistry: azurecr-oaf
      command: "login"

  # build and push image
  - task: Docker@2
    displayName: Build oneacrefund/dbt
    inputs:
      containerRegistry: azurecr-oaf
      repository: oneacrefund/dbt
      command: build
      tags: "$(BRANCH_NAME)"
      arguments: --build-arg DBT_VERSION=$(DBT_VERSION)

  # - script: |
  #     # Patch values file with latest tag
  #     yq e '.image.tag  = "$(IMAGE_SEMANTIC_HASH)"'  oaf-values.yaml -i
  #   displayName: Use latest image tag

  - task: HelmInstaller@1
    inputs:
      helmVersionToInstall: latest

  # # Package our values.yaml
  # - task: CopyFiles@2
  #   inputs:
  #     contents: 'oaf-values.yaml'
  #     targetFolder: '$(build.artifactStagingDirectory)'

  # build and push image
  - task: Docker@2
    displayName: Publish oneacrefund/dbt
    # Only publish develop branch
    # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      containerRegistry: azurecr-oaf
      repository: oneacrefund/dbt
      command: push
      tags: "$(BRANCH_NAME)"

  # - task: PublishBuildArtifacts@1
  #   displayName: Publish Helm chart
  #   # Only publish develop branch
  #   # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  #   inputs:
  #     PathtoPublish: "$(Build.ArtifactStagingDirectory)"
  #     ArtifactName: "dbt"
  #     publishLocation: "Container"
